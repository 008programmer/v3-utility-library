{"code":"/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to create a bounds of INT ranges.\r\n * @ignore\r\n */\r\nexport class GridBounds {\r\n    /**\r\n     *\r\n     * @param bounds\r\n     * @param z\r\n     */\r\n    constructor(bounds, z) {\r\n        // [sw, ne]\r\n        this.z = z;\r\n        this.minX = Math.min(bounds[0].x, bounds[1].x);\r\n        this.maxX = Math.max(bounds[0].x, bounds[1].x);\r\n        this.minY = Math.min(bounds[0].y, bounds[1].y);\r\n        this.maxY = Math.max(bounds[0].y, bounds[1].y);\r\n    }\r\n    /**\r\n     * Returns true if this bounds equal the given bounds.\r\n     * @param {GridBounds} gridBounds GridBounds The bounds to test.\r\n     * @return {Boolean} This Bounds equals the given GridBounds.\r\n     */\r\n    equals(gridBounds) {\r\n        if (this.maxX === gridBounds.maxX &&\r\n            this.maxY === gridBounds.maxY &&\r\n            this.minX === gridBounds.minX &&\r\n            this.minY === gridBounds.minY) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Returns true if this bounds (inclusively) contains the given point.\r\n     * @param {Point} point  The point to test.\r\n     * @return {Boolean} This Bounds contains the given Point.\r\n     */\r\n    containsPoint(point) {\r\n        return (this.minX <= point.x &&\r\n            this.maxX >= point.x &&\r\n            this.minY <= point.y &&\r\n            this.maxY >= point.y);\r\n    }\r\n}\r\n//# sourceMappingURL=gridbounds.js.map","references":[],"map":"{\"version\":3,\"file\":\"gridbounds.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/gridbounds.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;GAcG;AAEH;;;GAGG;AACH,MAAM,OAAO,UAAU;IAOrB;;;;OAIG;IACH,YAAY,MAA2B,EAAE,CAAS;QAChD,WAAW;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,UAAsB;QAC3B,IACE,IAAI,CAAC,IAAI,KAAK,UAAU,CAAC,IAAI;YAC7B,IAAI,CAAC,IAAI,KAAK,UAAU,CAAC,IAAI;YAC7B,IAAI,CAAC,IAAI,KAAK,UAAU,CAAC,IAAI;YAC7B,IAAI,CAAC,IAAI,KAAK,UAAU,CAAC,IAAI,EAC7B;YACA,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED;;;;OAIG;IACH,aAAa,CAAC,KAAwB;QACpC,OAAO,CACL,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CACrB,CAAC;IACJ,CAAC;CACF\"}","dts":{"name":"/home/travis/build/googlemaps/v3-utility-library/packages/markermanager/gridbounds.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/// <reference types=\"@types/googlemaps\" />\r\n/**\r\n * Helper class to create a bounds of INT ranges.\r\n * @ignore\r\n */\r\nexport declare class GridBounds {\r\n    z: number;\r\n    minX: number;\r\n    maxX: number;\r\n    minY: number;\r\n    maxY: number;\r\n    /**\r\n     *\r\n     * @param bounds\r\n     * @param z\r\n     */\r\n    constructor(bounds: google.maps.Point[], z: number);\r\n    /**\r\n     * Returns true if this bounds equal the given bounds.\r\n     * @param {GridBounds} gridBounds GridBounds The bounds to test.\r\n     * @return {Boolean} This Bounds equals the given GridBounds.\r\n     */\r\n    equals(gridBounds: GridBounds): boolean;\r\n    /**\r\n     * Returns true if this bounds (inclusively) contains the given point.\r\n     * @param {Point} point  The point to test.\r\n     * @return {Boolean} This Bounds contains the given Point.\r\n     */\r\n    containsPoint(point: google.maps.Point): boolean;\r\n}\r\n"}}

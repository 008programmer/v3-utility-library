{"version":3,"file":"loader.umd.js","sources":["../src/loader.ts"],"sourcesContent":["/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/// <reference types=\"@types/googlemaps\" />\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport interface LoaderOptions {\n  apiKey: string;\n  version?: string;\n  libraries?: string[];\n  channel?: string;\n  language?: string;\n  clientId?: string;\n  region?: string;\n}\n\nexport class Loader {\n  public version: string;\n  public apiKey: string;\n  public libraries: string[];\n  public channel: string;\n  public language: string;\n  public clientId: string;\n  public region: string;\n\n  private CALLBACK = \"__google_maps_callback\";\n  private URL = \"https://maps.googleapis.com/maps/api/js\";\n  private callbacks: Array<(e: Event) => any> = [];\n  private done = false;\n  private loading = false;\n  private onerrorEvent: Event;\n\n  constructor({\n    apiKey,\n    libraries = [],\n    channel,\n    language,\n    clientId,\n    region,\n    version\n  }: LoaderOptions) {\n    this.version = version;\n    this.apiKey = apiKey;\n    this.libraries = libraries;\n    this.channel = channel;\n    this.language = language;\n    this.clientId = clientId;\n    this.region = region;\n  }\n\n  public createUrl(): string {\n    let url = this.URL;\n\n    url += \"?callback=\" + this.CALLBACK;\n\n    if (this.apiKey) {\n      url += \"&key=\" + this.apiKey;\n    }\n\n    if (this.libraries.length > 0) {\n      url += \"&libraries=\" + this.libraries.join(\",\");\n    }\n\n    if (this.clientId) {\n      url += \"&client=\" + this.clientId;\n    }\n\n    if (this.channel) {\n      url += \"&channel=\" + this.channel;\n    }\n\n    if (this.language) {\n      url += \"&language=\" + this.language;\n    }\n\n    if (this.region) {\n      url += \"&region=\" + this.region;\n    }\n\n    if (this.version) {\n      url += \"&v=\" + this.version;\n    }\n\n    return url;\n  }\n\n  public load(): Promise<void> {\n    return this.loadPromise();\n  }\n\n  public loadPromise(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.loadCallback((err: Event) => {\n        if (!err) {\n          resolve();\n        } else {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  public loadCallback(fn: (e: Event) => any): void {\n    this.callbacks.push(fn);\n    this.execute();\n  }\n\n  private setScript(): void {\n    const url = this.createUrl();\n    const script = document.createElement(\"script\");\n\n    script.type = \"text/javascript\";\n    script.src = url;\n    script.onerror = this.loadErrorCallback;\n    script.defer = true;\n    script.async = true;\n    document.head.appendChild(script);\n  }\n\n  private loadErrorCallback(e: Event): void {\n    this.onerrorEvent = e;\n    this.callback();\n  }\n\n  private setCallback(): void {\n    (window as any)[this.CALLBACK] = this.callback.bind(this);\n  }\n\n  private callback(): void {\n    this.done = true;\n    this.loading = false;\n\n    this.callbacks.forEach(cb => {\n      cb(this.onerrorEvent);\n    });\n\n    this.callbacks = [];\n  }\n\n  private execute(): void {\n    if (this.done) {\n      this.callback();\n    } else {\n      if (this.loading) {\n        // do nothing but wait\n      } else {\n        this.loading = true;\n        this.setCallback();\n        this.setScript();\n      }\n    }\n  }\n}\n"],"names":["Loader","apiKey","libraries","channel","language","clientId","region","version","url","this","URL","CALLBACK","length","join","loadPromise","Promise","resolve","reject","_this","loadCallback","err","fn","callbacks","push","execute","createUrl","script","document","createElement","type","src","onerror","loadErrorCallback","defer","async","head","appendChild","e","onerrorEvent","callback","window","bind","done","loading","forEach","cb","_this2","setCallback","setScript"],"mappings":"0eA6BaA,+BAiBTC,IAAAA,WACAC,UAAAA,aAAY,KACZC,IAAAA,QACAC,IAAAA,SACAC,IAAAA,SACAC,IAAAA,OACAC,IAAAA,4HAdiB,kCACL,yDACgC,cAC/B,gBACG,OAYXA,QAAUA,OACVN,OAASA,OACTC,UAAYA,OACZC,QAAUA,OACVC,SAAWA,OACXC,SAAWA,OACXC,OAASA,iEAIVE,EAAMC,KAAKC,WAEfF,GAAO,aAAeC,KAAKE,SAEvBF,KAAKR,SACPO,GAAO,QAAUC,KAAKR,QAGpBQ,KAAKP,UAAUU,OAAS,IAC1BJ,GAAO,cAAgBC,KAAKP,UAAUW,KAAK,MAGzCJ,KAAKJ,WACPG,GAAO,WAAaC,KAAKJ,UAGvBI,KAAKN,UACPK,GAAO,YAAcC,KAAKN,SAGxBM,KAAKL,WACPI,GAAO,aAAeC,KAAKL,UAGzBK,KAAKH,SACPE,GAAO,WAAaC,KAAKH,QAGvBG,KAAKF,UACPC,GAAO,MAAQC,KAAKF,SAGfC,wCAIAC,KAAKK,sEAIL,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,EAAKC,cAAa,SAACC,GACZA,EAGHH,EAAOG,GAFPJ,+CAQYK,QACbC,UAAUC,KAAKF,QACfG,kDAIChB,EAAMC,KAAKgB,YACXC,EAASC,SAASC,cAAc,UAEtCF,EAAOG,KAAO,kBACdH,EAAOI,IAAMtB,EACbkB,EAAOK,QAAUtB,KAAKuB,kBACtBN,EAAOO,OAAQ,EACfP,EAAOQ,OAAQ,EACfP,SAASQ,KAAKC,YAAYV,6CAGFW,QACnBC,aAAeD,OACfE,iDAIJC,OAAe/B,KAAKE,UAAYF,KAAK8B,SAASE,KAAKhC,yDAI/CiC,MAAO,OACPC,SAAU,OAEVrB,UAAUsB,SAAQ,SAAAC,GACrBA,EAAGC,EAAKR,sBAGLhB,UAAY,qCAIbb,KAAKiC,UACFH,WAED9B,KAAKkC,eAGFA,SAAU,OACVI,mBACAC"}
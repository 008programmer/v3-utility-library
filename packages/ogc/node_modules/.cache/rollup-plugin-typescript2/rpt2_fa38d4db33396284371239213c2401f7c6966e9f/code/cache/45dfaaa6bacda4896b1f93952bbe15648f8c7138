{"code":"/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/// <reference types=\"@types/googlemaps\" />\r\nimport { stringify } from \"query-string\";\r\n/**\r\n * @ignore\r\n */\r\nconst DEFAULT_WMS_PARAMS = {\r\n    request: \"GetMap\",\r\n    service: \"WMS\",\r\n    srs: \"EPSG:3857\"\r\n};\r\n/**\r\n * @ignore\r\n */\r\nconst EPSG_3857_EXTENT = 20037508.34789244;\r\n/**\r\n * @ignore\r\n */\r\nconst ORIG_X = -EPSG_3857_EXTENT; // x starts from right\r\n/**\r\n * @ignore\r\n */\r\nconst ORIG_Y = EPSG_3857_EXTENT; // y starts from top\r\n/**\r\n * Convert xyz tile coordinates to mercator bounds.\r\n *\r\n * @param x\r\n * @param y\r\n * @param zoom\r\n * @returns {number[]} minx, miny, maxx, maxy\r\n */\r\nfunction xyzToBounds(x, y, zoom) {\r\n    const tileSize = (EPSG_3857_EXTENT * 2) / Math.pow(2, zoom);\r\n    const minx = ORIG_X + x * tileSize;\r\n    const maxx = ORIG_X + (x + 1) * tileSize;\r\n    const miny = ORIG_Y - (y + 1) * tileSize;\r\n    const maxy = ORIG_Y - y * tileSize;\r\n    return [minx, miny, maxx, maxy];\r\n}\r\n/**\r\n *\r\n * @param {WmsMapTypeOptions} params\r\n */\r\nconst WmsMapType = function ({ url, layers, styles = \"\", bgcolor = \"0xFFFFFF\", version = \"1.1.1\", transparent = true, format = \"image/png\", outline = false, \r\n// google.maps.ImageMapTypeOptions interface\r\nname, alt, maxZoom, minZoom, opacity }) {\r\n    // currently only support tileSize of 256\r\n    const tileSize = new google.maps.Size(256, 256);\r\n    const params = Object.assign({ layers,\r\n        styles,\r\n        version,\r\n        transparent,\r\n        bgcolor,\r\n        format,\r\n        outline, width: tileSize.width, height: tileSize.height }, DEFAULT_WMS_PARAMS);\r\n    if (url.slice(-1) !== \"?\") {\r\n        url += \"?\";\r\n    }\r\n    const getTileUrl = function (coord, zoom) {\r\n        return (url +\r\n            stringify(Object.assign({ bbox: xyzToBounds(coord.x, coord.y, zoom).join(\",\") }, params)));\r\n    };\r\n    return new google.maps.ImageMapType({\r\n        getTileUrl,\r\n        name,\r\n        alt,\r\n        opacity,\r\n        maxZoom,\r\n        minZoom,\r\n        tileSize\r\n    });\r\n};\r\nexport { EPSG_3857_EXTENT, DEFAULT_WMS_PARAMS, xyzToBounds, WmsMapType };\r\n//# sourceMappingURL=wmsmaptype.js.map","references":["/home/travis/build/googlemaps/v3-utility-library/node_modules/query-string/index.d.ts"],"map":"{\"version\":3,\"file\":\"wmsmaptype.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/wmsmaptype.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;GAcG;AAEH,2CAA2C;AAC3C,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAEzC;;GAEG;AACH,MAAM,kBAAkB,GAAG;IACzB,OAAO,EAAE,QAAQ;IACjB,OAAO,EAAE,KAAK;IACd,GAAG,EAAE,WAAW;CACjB,CAAC;AAEF;;GAEG;AACH,MAAM,gBAAgB,GAAG,iBAAiB,CAAC;AAE3C;;GAEG;AACH,MAAM,MAAM,GAAG,CAAC,gBAAgB,CAAC,CAAC,sBAAsB;AAExD;;GAEG;AACH,MAAM,MAAM,GAAG,gBAAgB,CAAC,CAAC,oBAAoB;AAErD;;;;;;;GAOG;AACH,SAAS,WAAW,CAAC,CAAS,EAAE,CAAS,EAAE,IAAY;IACrD,MAAM,QAAQ,GAAG,CAAC,gBAAgB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC5D,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAC;IACnC,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IACzC,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IACzC,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAC;IACnC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAClC,CAAC;AAkBD;;;GAGG;AACH,MAAM,UAAU,GAAG,UAAS,EAC1B,GAAG,EACH,MAAM,EACN,MAAM,GAAG,EAAE,EACX,OAAO,GAAG,UAAU,EACpB,OAAO,GAAG,OAAO,EACjB,WAAW,GAAG,IAAI,EAClB,MAAM,GAAG,WAAW,EACpB,OAAO,GAAG,KAAK;AACf,4CAA4C;AAC5C,IAAI,EACJ,GAAG,EACH,OAAO,EACP,OAAO,EACP,OAAO,EACW;IAClB,yCAAyC;IACzC,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAEhD,MAAM,MAAM,mBACV,MAAM;QACN,MAAM;QACN,OAAO;QACP,WAAW;QACX,OAAO;QACP,MAAM;QACN,OAAO,EACP,KAAK,EAAE,QAAQ,CAAC,KAAK,EACrB,MAAM,EAAE,QAAQ,CAAC,MAAM,IACpB,kBAAkB,CACtB,CAAC;IAEF,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACzB,GAAG,IAAI,GAAG,CAAC;KACZ;IAED,MAAM,UAAU,GAAG,UAAS,KAAwB,EAAE,IAAY;QAChE,OAAO,CACL,GAAG;YACH,SAAS,iBACP,IAAI,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAChD,MAAM,EACT,CACH,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAClC,UAAU;QACV,IAAI;QACJ,GAAG;QACH,OAAO;QACP,OAAO;QACP,OAAO;QACP,QAAQ;KACT,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,EACL,gBAAgB,EAChB,kBAAkB,EAClB,WAAW,EACX,UAAU,EAEX,CAAC\"}","dts":{"name":"/home/travis/build/googlemaps/v3-utility-library/packages/ogc/wmsmaptype.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/// <reference types=\"@types/googlemaps\" />\r\n/**\r\n * @ignore\r\n */\r\ndeclare const DEFAULT_WMS_PARAMS: {\r\n    request: string;\r\n    service: string;\r\n    srs: string;\r\n};\r\n/**\r\n * @ignore\r\n */\r\ndeclare const EPSG_3857_EXTENT = 20037508.34789244;\r\n/**\r\n * Convert xyz tile coordinates to mercator bounds.\r\n *\r\n * @param x\r\n * @param y\r\n * @param zoom\r\n * @returns {number[]} minx, miny, maxx, maxy\r\n */\r\ndeclare function xyzToBounds(x: number, y: number, zoom: number): number[];\r\ninterface WmsMapTypeOptions {\r\n    url: string;\r\n    layers: string;\r\n    maxZoom: number;\r\n    styles?: string;\r\n    bgcolor?: string;\r\n    version?: string;\r\n    transparent?: boolean;\r\n    format?: string;\r\n    outline?: boolean;\r\n    name?: string;\r\n    alt?: string;\r\n    minZoom?: number;\r\n    opacity?: number;\r\n}\r\n/**\r\n *\r\n * @param {WmsMapTypeOptions} params\r\n */\r\ndeclare const WmsMapType: ({ url, layers, styles, bgcolor, version, transparent, format, outline, name, alt, maxZoom, minZoom, opacity }: WmsMapTypeOptions) => google.maps.ImageMapType;\r\nexport { EPSG_3857_EXTENT, DEFAULT_WMS_PARAMS, xyzToBounds, WmsMapType, WmsMapTypeOptions };\r\n"}}
